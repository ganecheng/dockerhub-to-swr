name: issue-sync

on:
  issues:
    types:
      - opened
      - reopened

env:
  HUAWEICLOUD_IAM_AK: "${{ secrets.HUAWEICLOUD_IAM_AK }}"
  HUAWEICLOUD_IAM_SK: "${{ secrets.HUAWEICLOUD_IAM_SK }}"
  GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

# https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
permissions:
  issues: write

jobs:
  build:
    name: issue-sync
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v4

      - name: check sync condition
        if: ((!contains(github.event.issue.labels.*.name, 'x86_64')) && (!contains(github.event.issue.labels.*.name, 'aarch64'))) || !contains(github.event.issue.labels.*.name, 'sync-image')
        run: |
          # 定义一个包含字符串的数组
          declare -a STRING_SET=("ganecheng" "C772746954")
           
          # 严格判断函数
          strict_contains() {
              local search_term="$1"
              for item in "${STRING_SET[@]}"; do
                  if [[ "$item" == "$search_term" ]]; then
                      echo "1" # 返回1表示包含
                      return 1
                  fi
              done
              echo "0" # 返回0表示不包含
              return 0
          } 
          search_term="${{ github.event.issue.user.login }}"
          result=$(strict_contains "$search_term")
          if [[ "$result" -eq 0 ]]; then
            gh issue comment ${{ github.event.issue.number }} -b "@${{ github.event.issue.user.login }}, issue检查不通过, 需要满足以下3个条件的issue才会开启镜像自动同步<br><br>由 @ganecheng, @C772746954 提交<br>添加了sync-image标签<br>添加了镜像架构标签x86_64或aarch64"
            exit 1
          fi

      - name: init
        run: |
          gh issue comment ${{ github.event.issue.number }} -b "Hi @${{ github.event.issue.user.login }}, 镜像 ${{ github.event.issue.title }} 同步中...<br><br>[详情请查看](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"

      - name: DockerHub to SWR
        if: contains(github.event.issue.labels.*.name, 'x86_64')
        run: |
          docker login -u cn-south-1@$HUAWEICLOUD_IAM_AK -p $HUAWEICLOUD_IAM_SK swr.cn-south-1.myhuaweicloud.com
          set -ex
          
          images="${{ github.event.issue.title }}"
          IFS=',' read -r -a image_array <<< "$images"
          
          for image in "${image_array[@]}"; do
            docker pull "${image}" --platform "linux/amd64"
            docker tag "${image}" swr.cn-south-1.myhuaweicloud.com/gsc-hub/${image}-x86_64
            docker push swr.cn-south-1.myhuaweicloud.com/gsc-hub/${image}-x86_64
          
            docker save "${image}" -o "${image//\//_}-x86_64.tar"
          done
          
          tar -czf x86_64-images.tar.gz *-x86_64.tar

      - name: Upload artifact
        if: contains(github.event.issue.labels.*.name, 'x86_64')
        uses: actions/upload-artifact@v4
        with:
          name: x86_64-images.tar.gz
          path: x86_64-images.tar.gz
          retention-days: 1  # 将保留天数设置为1天 最多可设置90天

      - name: DockerHub to SWR
        if: contains(github.event.issue.labels.*.name, 'aarch64')
        run: |
          docker login -u cn-south-1@$HUAWEICLOUD_IAM_AK -p $HUAWEICLOUD_IAM_SK swr.cn-south-1.myhuaweicloud.com
          set -ex
          
          images="${{ github.event.issue.title }}"
          IFS=',' read -r -a image_array <<< "$images"
          
          for image in "${image_array[@]}"; do
            docker pull "${image}" --platform "linux/arm64"
            docker tag "${image}" swr.cn-south-1.myhuaweicloud.com/gsc-hub/${image}-aarch64
            docker push swr.cn-south-1.myhuaweicloud.com/gsc-hub/${image}-aarch64
          
            docker save "${image}" -o "${image//\//_}-aarch64.tar"
          done
          
          tar -czf aarch64-images.tar.gz *-aarch64.tar

      - name: Upload artifact
        if: contains(github.event.issue.labels.*.name, 'aarch64')
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-images.tar.gz
          path: aarch64-images.tar.gz
          retention-days: 1  # 将保留天数设置为1天 最多可设置90天

      - name: Clean up intermediate files
        run: |
          rm *.tar

      - name: success
        run: |
          gh issue comment ${{ github.event.issue.number }} -b "镜像 ${{ github.event.issue.title }} 同步完成<br><br>[离线镜像包下载地址](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          gh issue edit ${{ github.event.issue.number }} --add-label "sync-image-success"
          gh issue close ${{ github.event.issue.number }}

      - name: fail
        if: failure()
        run: |
          gh issue comment ${{ github.event.issue.number }} -b "镜像 ${{ github.event.issue.title }} 同步失败<br><br>[失败详情请查看](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          gh issue edit ${{ github.event.issue.number }} --add-label "sync-image-fail"
          gh issue close ${{ github.event.issue.number }}
